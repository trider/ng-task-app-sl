{"ast":null,"code":"import 'zone.js/node';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { CommonEngine } from '@angular/ssr';\nimport * as express from 'express';\nimport { existsSync } from 'node:fs';\nimport { join } from 'node:path';\nimport AppServerModule from './src/main.server';\n// The Express app is exported so that it can be used by serverless Functions.\nexport function app() {\n  const server = express();\n  const distFolder = join(process.cwd(), 'dist/my-test-app/browser');\n  const indexHtml = existsSync(join(distFolder, 'index.original.html')) ? join(distFolder, 'index.original.html') : join(distFolder, 'index.html');\n  const commonEngine = new CommonEngine();\n  server.set('view engine', 'html');\n  server.set('views', distFolder);\n  // Example Express Rest API endpoints\n  // server.get('/api/**', (req, res) => { });\n  // Serve static files from /browser\n  server.get('*.*', express.static(distFolder, {\n    maxAge: '1y'\n  }));\n  // All regular routes use the Angular engine\n  server.get('*', (req, res, next) => {\n    const {\n      protocol,\n      originalUrl,\n      baseUrl,\n      headers\n    } = req;\n    commonEngine.render({\n      bootstrap: AppServerModule,\n      documentFilePath: indexHtml,\n      url: `${protocol}://${headers.host}${originalUrl}`,\n      publicPath: distFolder,\n      providers: [{\n        provide: APP_BASE_HREF,\n        useValue: baseUrl\n      }]\n    }).then(html => res.send(html)).catch(err => next(err));\n  });\n  return server;\n}\nfunction run() {\n  const port = process.env['PORT'] || 4000;\n  // Start up the Node server\n  const server = app();\n  server.listen(port, () => {\n    console.log(`Node Express server listening on http://localhost:${port}`);\n  });\n}\nconst mainModule = __non_webpack_require__.main;\nconst moduleFilename = mainModule && mainModule.filename || '';\nif (moduleFilename === __filename || moduleFilename.includes('iisnode')) {\n  run();\n}\nexport default AppServerModule;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}