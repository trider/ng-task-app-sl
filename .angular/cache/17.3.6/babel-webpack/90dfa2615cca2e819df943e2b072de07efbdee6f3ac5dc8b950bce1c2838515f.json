{"ast":null,"code":"import { FormGroup, FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { GlobalVariables } from 'src/app/common/global-variables';\nimport { Users } from '@app/common/data/users';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/services/http-service/http-service.service\";\nimport * as i3 from \"@angular/forms\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(route, router, httpService) {\n      this.route = route;\n      this.router = router;\n      this.httpService = httpService;\n      this.appVersion = GlobalVariables.appVersion;\n      this.users = Users;\n      this.user = null;\n      this.loginForm = new FormGroup({\n        email: new FormControl('jonnygold@gmail.com'),\n        password: new FormControl('1234')\n      });\n    }\n    ngOnInit() {}\n    onSubmit() {\n      this.httpService.postServiceData('https://u767k4g1u6.execute-api.us-east-1.amazonaws.com/api/users/login/user', this.loginForm.value).subscribe(response => {\n        response.set('Access-Control-Allow-Origin', 'https://u767k4g1u6.execute-api.us-east-1.amazonaws.com');\n        response = response.json();\n        console.log('response', response);\n        if (response.isLoggedIn) {\n          alert(JSON.stringify(response));\n          sessionStorage.setItem('user', JSON.stringify(response));\n          this.router.navigate(['/home']);\n        }\n      });\n    }\n    _onSubmit() {\n      this.user = this.users.filter(user => user.email === this.loginForm.value.email && user.password === this.loginForm.value.password)[0];\n      if (this.user !== null) {\n        alert(this.user.userName + ' logged in');\n        console.log('User found\\n\\n', this.user);\n        sessionStorage.setItem('user', JSON.stringify(this.user));\n        this.router.navigate(['/home']);\n      }\n    }\n    static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClientService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 22,\n      vars: 2,\n      consts: [[1, \"container-fluid\", \"container-lg\", \"d-lg-flex\"], [1, \"mx-auto\", \"p-2\", 2, \"margin-top\", \"100px\", \"width\", \"40%\"], [1, \"card\"], [1, \"card-header\", \"bg-primary\"], [1, \"text-light\", \"text-center\"], [1, \"card-body\"], [1, \"form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [1, \"form-label\"], [\"formControlName\", \"email\", 1, \"form-control\"], [\"formControlName\", \"password\", \"type\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"card-footer\", \"bg-primary\", \"text-light\", \"text-center\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h4\", 4);\n          i0.ɵɵtext(5, \"Angular Task App\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"form\", 6);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n          i0.ɵɵtext(10, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 8);\n          i0.ɵɵtext(14, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"button\", 11);\n          i0.ɵɵtext(17, \"Submit\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(18, \"div\", 12);\n          i0.ɵɵtext(19, \" Please login to continue \");\n          i0.ɵɵelement(20, \"br\");\n          i0.ɵɵtext(21);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(14);\n          i0.ɵɵtextInterpolate1(\"Version \", ctx.appVersion, \" \");\n        }\n      },\n      dependencies: [ReactiveFormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}